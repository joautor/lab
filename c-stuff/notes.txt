C programming:

--> to accept user input nga may ara space, tapos ma end lang ang input pag nag newline
    scanf("\n");
    scanf("%[^\n]%*c", sen);
Here, [] is the scanset character. ^\n stands for taking input until a newline isn't encountered.
Then, with this %*c, it reads the newline character and here, the used * indicates that this newline character is discarded.

Note: After inputting the character and the string, inputting the sentence by the above mentioned 
statement won't work. This is because, at the end of each line, a new line character (\n) is present. 
So, the statement: scanf("%[^\n]%*c", s); will not work because the last statement will read a 
newline character from the previous line. This can be handled in a variety of ways and one of 
them being: scanf("\n"); before the last statement.
